<?php

/**
 * @file
 * Stores entity_legal document published version info in state.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\entity_legal\EntityLegalDocumentInterface;

/**
 * Implements hook_entity_legal_published_version_alter().
 */
function entity_legal_state_entity_legal_published_version_alter(&$published_version_name, EntityLegalDocumentInterface $legal_document) {
  $published_version_name = \Drupal::service('entity_legal_state')
    ->getStateVersion($legal_document);
}

/**
 * Implements hook_entity_type_alter().
 */
function entity_legal_state_entity_type_alter(array &$entity_types) {
  // Override default EntityLegalDocumentVersionForm class with our own.
  /* @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  $entity_types['entity_legal_document_version']->setFormClass('default', '\Drupal\entity_legal_state\Form\EntityLegalStateDocumentVersionForm');
}

/**
 * Implements hook_entity_presave().
 */
function entity_legal_state_entity_presave(EntityInterface $entity) {
  if ($entity instanceof EntityLegalDocumentInterface) {
    // Update state with new published_version if appropriate.
    \Drupal::service('entity_legal_state')->updatePublishedVersion($entity);

    // Don't save published_version value in the config entity.
    $entity->set('published_version', NULL);
  }
}

/**
 * Implements hook_entity_delete().
 */
function entity_legal_state_entity_delete(EntityInterface $entity) {
  if ($entity instanceof EntityLegalDocumentInterface) {
    \Drupal::service('entity_legal_state')->deleteStateVersion($entity);
  }
}
